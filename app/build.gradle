apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    defaultConfig {
        applicationId "com.frankfancode.umu"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
        disable 'RtlHardcoded', 'IconDensities', 'IconMissingDensityFolder', 'GradleDependency',
                'ExportedReceiver', 'ExportedService', 'InvalidPackage'
        htmlOutput file('../scan-output/app_result.html')
        xmlOutput file('../scan-output/app_result.xml')
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        qa.initWith(release)
        qa {
            versionNameSuffix ".${BUILD_NUMBER}"
        }
    }


    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release') && variant.getFlavors().get(0).name.equals('Demo')) {
            variant.setIgnore(true);
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def buildRootDir = buildDir.getParentFile().getParentFile()
            def buildOutputRootDir = new File(buildRootDir, "output")
            def buildOutputDir = new File(buildOutputRootDir, "Build_${BUILD_NUMBER}")
            def version = defaultConfig.versionName;
            if (variant.buildType.versionNameSuffix) {
                version += variant.buildType.versionNameSuffix
            }
            def dirname = "umu-" + variant.productFlavors[0].name + "-" + variant.buildType.name + "-" + version + "-" + variant.productFlavors[1].name;

            def apkDir = new File(buildOutputDir, dirname)
            output.outputFile = new File(apkDir, dirname + ".apk");

            if (variant.buildType.minifyEnabled) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        into "${apkDir.absolutePath}"
                        rename { String fileName ->
                            "${dirname}_mapping.txt"
                        }
                    }
                }
            }
        }
    }


    productFlavors {

        flavorDimensions "enviroment", "channel"

        Dev {
            dimension "enviroment"
            applicationId = ANDROID_BUILD_DEV_APP_ID
            manifestPlaceholders = [APP_NAME: 'UmuDev']
        }

        Demo {
            dimension "enviroment"
            applicationId = ANDROID_BUILD_DEMO_APP_ID
            manifestPlaceholders = [APP_NAME: 'UmuDemo']
        }

        Online {
            dimension "enviroment"
            applicationId = ANDROID_BUILD_APP_ID
            manifestPlaceholders = [APP_NAME: 'Umu']
        }

        官网 {
            dimension "channel"
            manifestPlaceholders = [CHANNEL_NAME: 'portal']
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.jakewharton:butterknife:8.2.1'
    apt 'com.jakewharton:butterknife-compiler:8.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.2'

    testCompile 'junit:junit:4.12'
}
